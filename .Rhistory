network_diputadxs <- get_network_data(category = "deputies",
start_date = "2021-06-01",
end_date = "2021-07-31")
library(politicxsentwitteR)
library(mongolite)
network_diputadxs <- get_network_data(category = "deputies",
start_date = "2021-06-01",
end_date = "2021-07-31")
install.packages("ggpp")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(ggpp)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(politicxsentwitteR)
network <- get_network_data(screen.name = c("others"))
network <- get_network_data(screen.name = "others")
network <- get_network_data("others")
library(politicxsentwitteR)
library(tidyverse)
data_fr_fol <- get_friends_followers(screen.name = c("alferdez", "horaciorlarreta"))
library(ggpp)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("right"),
y = c("top"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 3)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("right"),
y = c("top"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 3)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("right"),
y = c("center"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 3)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("center"),
y = c("center"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 3)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("top"),
y = c("center"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 3)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("center"),
y = c("top"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 3)
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("center"),
y = c("top"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 4)
paged_table(head(data_fr_fol %>% arrange(desc(date)),4))
library(politicxsentwitteR)
af <- get_timeline_data(screen.name = "alferdez")
paged_table(head(af,3))
af[,-1]
af <- af[,-1]
af
af <- cbind(newColName = rownames(af), af)
rownames(af) <- 1:nrow(af)
library(politicxsentwitteR)
af <- get_timeline_data(screen.name = "alferdez")
af <- cbind(newColName = rownames(af), af)
rownames(af) <- 1:nrow(af)
af
af <- af[,-1]
af
paged_table(head(af,3))
library(rmarkdown)
library(devtools)
#install_github("guadag12/politicxsentwitteR", force = T)
library(politicxsentwitteR)
paged_table(head(af,3))
paged_table(head(data_fr_fol %>% arrange(desc(date)),4))
data_fr_fol %>%
ggplot() +
geom_line(aes(x=as.Date(date), y=as.numeric(followers_count), color=screen_name)) + theme_bw() +
scale_color_manual(values = c("#00459e", "#ba9200")) +
labs( x = "Fecha", y = "Cantidad", title = "Evolución de followers de @alferdez y @horaciorlarreta") +
facet_wrap(~screen_name, scale="free_y") +
geom_vline(xintercept = as.Date("2021-04-14"),
color = "black") +
geom_text_npc(data = data.frame(x = c("center"),
y = c("top"),
label = c("Cierre escuelas 🎓")),
mapping = aes(npcx = x, npcy = y, label = label),
size = 4)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(readxl)
data_visitas_1_ <- read_excel("images/data_visitas (1).xlsx")
head(data_visitas_1_)
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
library(politicxsentwitteR)
install_github("guadag12/politicxsentwitteR", force = T)
library(devtools)
<<<<<<< Updated upstream
=======
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(rmarkdown)
library(rmarkdown)
library(devtools)
install_github("guadag12/politicxsentwitteR", force = T)
library(politicxsentwitteR)
library(politicxsentwitteR)
af <- get_timeline_data(screen.name = "alferdez")
library(readxl)
data_visitas_1_ <- read_excel("images/data_visitas (1).xlsx")
head(data_visitas_1_)
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
library(tidyverse)
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_bw()
# Turn it interactive with ggplotly
p <- ggplotly(p)
library(plotly)
# Turn it interactive with ggplotly
p <- ggplotly(p)
p
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#73a9ff", alpha=0.5) +
geom_line(color="#73a9ff") +
ylab("bitcoin price ($)") +
theme_bw()
# Turn it interactive with ggplotly
p <- ggplotly(p)
p
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#e85656", alpha=0.5) +
geom_line(color="#e85656") +
ylab("bitcoin price ($)") +
theme_bw()
# Turn it interactive with ggplotly
p <- ggplotly(p)
p
p <- data_visitas_1_ %>%
ggplot( aes(x=timestamp2, y=visitas)) +
geom_area(fill="#e85656", alpha=0.5) +
geom_line(color="#e85656") +
ylab("visitas a la app") +
theme_bw()
# Turn it interactive with ggplotly
p <- ggplotly(p)
p
library(politicxsentwitteR)
library(tidyverse)
library(igraph)
library(visNetwork)
library(viridis) #sólo se necesita para los gráficos de ggplot del principio, no para las nubes
library(ggpp)    #sólo se necesita para los gráficos de ggplot del principio, no para las nubes
library(politicxsentwitteR)
library(tidyverse)
library(igraph)
library(visNetwork)
library(viridis) #sólo se necesita para los gráficos de ggplot del principio, no para las nubes
library(ggpp)    #sólo se necesita para los gráficos de ggplot del principio, no para las nubes
library(devtools)
## OPCION 2: Tambien podemos levantar la data de github con "read.csv()":
network_diputadxs <- read.csv("https://raw.githubusercontent.com/guadag12/socialnetwork-rladies-talk/main/codigo/network_diputadxs.csv")
data_usuarios <- read.csv("https://github.com/guadag12/socialnetwork-rladies-talk/raw/main/codigo/data_usuarios.csv")
# Generamos todo el tratamiento para que nos quede UNA SOLA columna con el id
# y alguna información adicional:
network_diputadxs <- network_diputadxs %>%
group_by(user_id, retweet_user_id) %>%
summarise(retweet_count = sum(value))
nodos <- gather(data = network_diputadxs, key = "tipo", value = "id", c(1,2))
nodos$retweet_count <- as.numeric(nodos$retweet_count)
nodos <- nodos %>%
group_by(id) %>%
summarise(retweet_count = sum(retweet_count)) %>%
left_join(data_usuarios, by = c("id" = "user_id"))
head(nodos)
links <- network_diputadxs %>%
group_by(user_id, retweet_user_id) %>%
filter((user_id %in% nodos$id) & (retweet_user_id %in% nodos$id)) %>%
rename(from = user_id,
to = retweet_user_id,
friendship = retweet_count)
g <- graph_from_data_frame(links, directed=TRUE, vertices=nodos)
plot(g)
plot(g, vertex.label = NA, vertex.color = NA) # hacemos un plot sin distinguir color y usuario
plot(g, vertex.label = NA, vertex.color = "red")
plot(g, vertex.label = NA)
legend(x=-1.5, y=-1.1, c("Otrxs",  "Cambiemos", "Frente de Todos", "Libertarios",
"Frente de Izquierda","Peronismo"), pch=21,
col="#777777", pt.bg=unique(data_usuarios$color), pt.cex=2, cex=.8, bty="n", ncol=1)
plot(g, vertex.label = label,
vertex.size = sqrt(V(g)$followers_count)/28,
edge.color = "#ffbc75")
label <- ifelse(V(g)$followers_count > quantile(V(g)$followers_count, 0.95),
yes = V(g)$name, no = NA)
plot(g, vertex.label = label,
vertex.size = sqrt(V(g)$followers_count)/28,
edge.color = "#ffbc75")
plot(g, vertex.label = label,
vertex.size = sqrt(V(g)$followers_count)/28)
label2 <- ifelse(test = V(g)$retweet_count > quantile(V(g)$retweet_count, 0.98),
yes = V(g)$name, no = NA)
par(mfrow=c(1,2), mar=c(0,0,0,0))
plot(g, vertex.label = NA, vertex.size = sqrt(V(g)$followers_count)/28,
edge.color = "#d1d1d1",
main = "Network basado en Followers")
plot(g, vertex.label = NA, vertex.size = sqrt(V(g)$retweet_count)*2,
edge.color = "#d1d1d1",
main = "Network basado en RTS")
par(mfrow=c(1,1), mar=c(0,0,0,0))
label2 <- ifelse(test = V(g)$retweet_count > quantile(V(g)$retweet_count, 0.98),
yes = V(g)$name, no = NA)
plot(wc, g, vertex.label=NA, layout=layout.fruchterman.reingold(g),
vertex.size=log(g.ind+1)*2, vertex.label.color="Black",
vertex.color=V(g)$color, vertex.frame.color=V(g)$color,
edge.arrow.size=.2)
## Generamos un nuevo objeto que detecta comunidades para nuestra nube con
## walktrap.community()
wc <- walktrap.community(g)
# Se determina qué miembro corresponde a qué comunidad
users_wc <- membership(wc)
plot(wc, g, vertex.label=NA, layout=layout.fruchterman.reingold(g),
vertex.size=log(g.ind+1)*2, vertex.label.color="Black",
vertex.color=V(g)$color, vertex.frame.color=V(g)$color,
edge.arrow.size=.2)
label2 <- ifelse(test = V(g)$retweet_count > quantile(V(g)$retweet_count, 0.98),
yes = V(g)$name, no = NA)
plot(g, vertex.label = label2,
vertex.size = sqrt(V(g)$followers_count)/28)
plot(g, vertex.label = label2,
vertex.size = sqrt(V(g)$retweet_count)/28)
plot(g, vertex.label = label2,
vertex.size = sqrt(V(g)$followers_count)/28)
plot(g, vertex.label = label,
vertex.size = sqrt(V(g)$followers_count)/28)
plot(g, vertex.label = label)
plot(g, vertex.label = V(g))
plot(g, vertex.label = V(g)$screen_name)
plot(g, vertex.label = V(g)$screen_name),
vertex.size = sqrt(V(g)$followers_count)/28)
plot(g, vertex.label = V(g)$screen_name),
vertex.size = sqrt(V(g)$followers_count))
plot(g, vertex.label = V(g)$screen_name,
vertex.size = sqrt(V(g)$followers_count))
plot(g, vertex.label = V(g)$screen_name,
vertex.size = sqrt(V(g)$followers_count)/20)
install.packages("xaringan")
install.packages("xaringanExtra")
install.packages("xaringanthemes")
install.packages("xaringanthemer")
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
devtools::install_github("gadenbuie/xaringanExtra")
tmpfile <- tempfile(fileext = ".zip")
download.file("https://github.com/gadenbuie/xaringanExtra/archive/master.zip", tmpfile)
devtools::install_local(tmpfile)
devtools::install_github("gadenbuie/xaringanExtra")
>>>>>>> Stashed changes
